---
- name: Create temporary CircleCI Directory
  tempfile:
    state: directory
    suffix: "_circleci"
    path: "/tmp/"
  register: cli_temp_dir

- name: Download CircleCI CLI and Verify Checksum
  get_url:
    url: "{{ CLI_GITHUB_BASE_URL }}/releases/download/v{{ CLI_VERSION }}/circleci-cli_{{ CLI_VERSION }}_{{ ansible_system | lower }}_{{ arch }}.tar.gz"
    dest: "{{ cli_temp_dir.path }}"
    checksum: "sha256:{{ CLI_GITHUB_BASE_URL }}/releases/download/v{{ CLI_VERSION }}/circleci-cli_{{ CLI_VERSION }}_checksums.txt"
  register: download_info

- name: Extract CircleCI CLI to {{ CLI_INSTALL_DIR }}
  unarchive:
    src: "{{ download_info.dest }}"
    dest: "{{ CLI_INSTALL_DIR }}"
    remote_src: true
    extra_opts: [--strip-components=1]
    exclude:
      - api
      - md_docs

- name: Delete temporary CircleCI Directory
  file:
    path: "{{ cli_temp_dir.path }}"
    state: absent
  when: cli_temp_dir.path is defined

- name: Check CircleCI CLI Install
  shell: circleci version
  register: cli_command
  become_user: "{{ CLI_USER }}"
  failed_when: cli_command.rc != 0

- name: Grab {{ CLI_USER }} home directory
  user:
    name: "{{ CLI_USER }}"
    state: present
  register: user_registered

- name: Template cli.yml
  template:
    src: "cli.yml.j2"
    dest: "{{ user_registered.home }}/.circleci/cli.yml"
    owner: "{{ CLI_USER }}"
    group: "{{ CLI_USER }}"
    mode: 0600

- name: Verify CircleCI CLI Config
  shell: circleci diagnostic
  register: diagnostic_command
  become_user: "{{ CLI_USER }}"
  failed_when: diagnostic_command.rc != 0